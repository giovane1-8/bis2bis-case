<?php
/*
 * Classe Model da pagina Administrativa
*/

namespace Models;

class AdmModel extends Model
{
    private $resultado = false;



    function getResultado(): bool
    {
        return $this->resultado;
        $this->resultado = false;
    }
    function getEmailUser($offset, $nm_usuario = "")
    {
        if ($nm_usuario) {
            $nm_usuario = "WHERE nm_email like '%$nm_usuario%'";
        }
        $sql = "SELECT * from tb_usuario $nm_usuario LIMIT 10 OFFSET $offset";
        $query = $this->PDO->prepare($sql);
        $query->execute();
        $query = $query->fetchAll($this->PDO::FETCH_ASSOC);
        return json_encode($query, JSON_UNESCAPED_UNICODE);
    }
    function altUser($dados)
    {
        $sql = "UPDATE tb_usuario SET nm_usuario = :nomeUsuario, nm_email = :emailUsuario, nm_senha = :userSenha,nm_privilegio = :userPrivilegio WHERE id_usuario = :iduser;";
        $query = $this->PDO->prepare($sql);
        $query->bindparam(":nomeUsuario", $dados["nome"], \PDO::PARAM_STR);
        $query->bindparam(":emailUsuario", $dados["email"], \PDO::PARAM_STR);
        $dados["senha"] = base64_encode($dados["senha"]);
        $query->bindparam(":userSenha", $dados["senha"], \PDO::PARAM_STR);
        $query->bindparam(":userPrivilegio", $dados["privilegio"], \PDO::PARAM_STR);
        $query->bindparam(":iduser", $dados["idHidden"], \PDO::PARAM_STR);
        $query->execute();
    }

    function excluiUser($idUser)
    {
        $sql = "DELETE from tb_usuario Where id_usuario = :iduser";
        $smtm = $this->PDO->prepare($sql);
        $smtm->bindParam(":iduser", $idUser);
        $smtm->execute();
    }



    function getBackupBanco()
    {

        $dbhost = $this->servidor;
        $dbport = $this->port;
        $dbuser = $this->username;
        $dbpass = $this->password;
        $dbname = $this->banco;
        $caminhoMySql = $this->caminhoMysql;

        $backupfile = 'backupBD/Autobackup_' . date("Ymd") . '.sql';

        system($caminhoMySql . "mysqldump -h $dbhost -P $dbport -u $dbuser $dbname> " . $backupfile);
    }
    function criarDb()
    {
        $PDO = new \PDO('mysql:host=' . $this->servidor . ':' . $this->port . ';', $this->username, $this->password, array(\PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES utf8"));

        $sql = <<<__sql
CREATE DATABASE IF NOT EXISTS db_blog;

USE db_blog;


CREATE TABLE IF NOT EXISTS `tb_usuario` (
    `id_usuario` int(11) NOT NULL AUTO_INCREMENT,
    `nm_usuario` varchar(45) NOT NULL,
    `nm_email` varchar(100) NOT NULL,
    `nm_senha` varchar(100) NOT NULL,
    `nm_privilegio` varchar(45) DEFAULT NULL,
    PRIMARY KEY (`id_usuario`)
  ) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS `tb_post` (
    `id_post` int(11) NOT NULL AUTO_INCREMENT,
    `nm_titulo` varchar(100) NOT NULL,
    `nm_corpo` text NOT NULL,
    `id_usuario` int(11) NOT NULL,
    `dt_post` date NOT NULL,
    PRIMARY KEY (`id_post`),
    KEY `fk_tb_post_tb_usuario_idx` (`id_usuario`),
    CONSTRAINT `fk_tb_post_tb_usuario` FOREIGN KEY (`id_usuario`) REFERENCES `tb_usuario` (`id_usuario`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4;
  
  
__sql;
        $PDO->exec($sql);
    }
    function popularBanco()
    {
        $sql = <<<'__insert'
            INSERT INTO `tb_usuario` VALUES (1,'Giovane de Limad','giovane.gi2012@hotmail.com','MTIz','gm'),(2,'Maria','maria@hotmail.com','MTIz','mod'),(3,'João','joao@hotmail.com','MTIz',NULL);

            INSERT INTO `tb_post` VALUES (1,'Como usar pdo com PHP','<h1 style=\"margin-left: 0px;\">PHP Data Object (PDO) – Hospedagem de Sites</h1><p style=\"margin-left: 0px;\"><a href=\"http://www.php.net/manual/en/book.pdo.php\" target=\"_blank\">PDO(PHP Data Objects)</a>&nbsp;é um módulo de PHP montado sob o paradigma Orientado a Objetos, cujo objetivo é prover uma padronização da forma com que PHP se comunica com um banco de dados relacional. Este módulo surgiu a partir da versão 5 de PHP. PDO, portanto, é uma interface que define um conjunto de classes e a assinatura dos métodos de comunicação com uma base de dados.</p><h3 style=\"margin-left: 0px;\">Por que usar PDO</h3><p style=\"margin-left: 0px;\">Antes da chegada do PDO, a linguagem PHP oferecia suporte à comunicação com diferentes modelos de SGBD através de módulos específicos. A maioria deles provia uma biblioteca de funções e utilizava um resource para representar a conexão e outro para representar um resultset (o resultado de uma consulta). As operações eram feitas sobre as variáveis de resource.</p><p style=\"margin-left: 0px;\">Cada driver implementava suas operações conforme imaginavam ser mais adequados. Embora alguns deles tivessem um funcionamento semelhante, a ordem dos parâmetros nem sempre era a mesma e podia causar uma certa confusão entre programadores.</p><h3 style=\"margin-left: 0px;\">Como conectar a um banco MySQL usando PDO</h3><ul><li>Testando a conexão</li></ul><pre><code> <span class=\"kw2\">&lt;?php</span>\r\n  <span class=\"re0\">$banco</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> PDO<span class=\"br0\">(</span><span class=\"st_h\">\'mysql:host=localhost;dbname=nome_do_banco\'</span><span class=\"sy0\">,</span> <span class=\"st_h\">\'username\'</span><span class=\"sy0\">,</span><span class=\"st_h\">\'password\'</span><span class=\"br0\">)</span>or <span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"kw3\">mysql_error</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n  <span class=\"kw1\">print</span> <span class=\"st0\">\"Conexão Efetuada com sucesso!\"</span><span class=\"sy0\">;</span>\r\n  <span class=\"sy1\">?&gt;</span></code></pre><ul><li>Incluir dados</li></ul><pre><code><span class=\"kw2\">&lt;?php</span>\r\n  <span class=\"re0\">$banco</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> PDO<span class=\"br0\">(</span><span class=\"st_h\">\'mysql:host=localhost;dbname=nome_do_banco\'</span><span class=\"sy0\">,</span> <span class=\"st_h\">\'username\'</span><span class=\"sy0\">,</span><span class=\"st_h\">\'password\'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n  <span class=\"re0\">$novo_cliente</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st_h\">\'nome\'</span><span class=\"sy0\">=&gt;</span><span class=\"st_h\">\'José\'</span><span class=\"sy0\">,</span><span class=\"st_h\">\'departamento\'</span><span class=\"sy0\">=&gt;</span><span class=\"st_h\">\'TI\'</span><span class=\"sy0\">,</span><span class=\"st_h\">\'unidade\'</span><span class=\"sy0\">=&gt;</span><span class=\"st_h\">\'Paulista\'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n  <span class=\"re0\">$banco</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">prepare</span><span class=\"br0\">(</span><span class=\"st_h\">\'INSERT INTO clientes (nome,departamento,unidade) VALUES (:nome,:departamento,:unidade)\'</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">execute</span><span class=\"br0\">(</span><span class=\"re0\">$novo_cliente</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n  <span class=\"sy1\">?&gt;</span></code></pre><h3 style=\"margin-left: 0px;\">Pesquisar dados em base MySQL utilizando querys simples e stored procedures</h3><p style=\"margin-left: 0px;\">Neste exemplo, é possível efetuar pesquisas em bases MySQL utilizando querys e stored procedures. Lembrando que para evitar conflitos, teste sua procedure antes de implementá-la em sua aplicação.</p><ul><li>Arquivo: ProcedurePDO.php</li></ul><pre><code><span class=\"kw2\">&lt;?php</span>\r\n&nbsp;\r\n<span class=\"co1\">//Dados de acesso</span>\r\n<span class=\"re0\">$host</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Nome_do_Host\"</span><span class=\"sy0\">;</span>\r\n<span class=\"re0\">$dbn</span>  <span class=\"sy0\">=</span> <span class=\"st0\">\"Nome_da_Base\"</span><span class=\"sy0\">;</span>\r\n<span class=\"re0\">$user</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Nome_do_Usuário\"</span><span class=\"sy0\">;</span>\r\n<span class=\"re0\">$pass</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Senha_da_Base\"</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n<span class=\"re0\">$tabela</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Nome_da_Tabela\"</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\ntry\r\n<span class=\"br0\">{</span>\r\n	<span class=\"co1\">//Conectar</span>\r\n	<span class=\"re0\">$ligacao</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> PDO<span class=\"br0\">(</span><span class=\"st0\">\"mysql:dbname=<span class=\"es4\">$dbn</span>; host=<span class=\"es4\">$host</span>\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$user</span><span class=\"sy0\">,</span> <span class=\"re0\">$pass</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n	<span class=\"re0\">$ligacao</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">setAttribute</span><span class=\"br0\">(</span>PDO<span class=\"sy0\">::</span><span class=\"me2\">ATTR_ERRMODE</span><span class=\"sy0\">,</span> PDO<span class=\"sy0\">::</span><span class=\"me2\">ERRMODE_EXCEPTION</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n	<span class=\"co1\">//Em caso de pesquisas, via procedures</span>\r\n	<span class=\"co1\">//$pesq = \"\";</span>\r\n	<span class=\"co1\">//$sql = \"CALL Nome_da_procedure()\";</span>\r\n&nbsp;\r\n	<span class=\"co1\">//Em caso de querys</span>\r\n	<span class=\"re0\">$pesq</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Nome_do_Campo\"</span><span class=\"sy0\">;</span>\r\n	<span class=\"re0\">$sql</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"SELECT * FROM <span class=\"es4\">$tabela</span> WHERE nome=&nbsp;:nome_param\"</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n	<span class=\"re0\">$resultados</span> <span class=\"sy0\">=</span> <span class=\"re0\">$ligacao</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">prepare</span><span class=\"br0\">(</span><span class=\"re0\">$sql</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n	<span class=\"co1\">//Definição de parâmetros</span>\r\n	<span class=\"re0\">$resultados</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">bindParam</span><span class=\"br0\">(</span><span class=\"st0\">\":nome_param\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$pesq</span><span class=\"sy0\">,</span> PDO<span class=\"sy0\">::</span><span class=\"me2\">PARAM_STR</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n	<span class=\"re0\">$resultados</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">execute</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n	<span class=\"kw1\">echo</span><span class=\"st_h\">\'&lt;p&gt;\'</span><span class=\"sy0\">.</span><span class=\"re0\">$sql</span><span class=\"sy0\">.</span><span class=\"st_h\">\'&lt;/p&gt;&lt;hr&gt;\'</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n	<span class=\"kw1\">foreach</span><span class=\"br0\">(</span><span class=\"re0\">$resultados</span> <span class=\"kw1\">as</span> <span class=\"re0\">$linha</span><span class=\"br0\">)</span>\r\n	<span class=\"br0\">{</span>\r\n		<span class=\"kw1\">echo</span> <span class=\"st_h\">\'&lt;p&gt;\'</span><span class=\"sy0\">;</span>\r\n		<span class=\"co1\">//Nome do campo na tabela pesquisada</span>\r\n		<span class=\"kw1\">echo</span> <span class=\"re0\">$linha</span><span class=\"br0\">[</span><span class=\"st0\">\"Nome_da_Coluna\"</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>\r\n		<span class=\"kw1\">echo</span> <span class=\"st_h\">\'&lt;/p&gt;\'</span><span class=\"sy0\">;</span>\r\n	<span class=\"br0\">}</span>\r\n&nbsp;\r\n	<span class=\"kw1\">echo</span> <span class=\"st_h\">\'&lt;hr&gt;&lt;p&gt;Resultados: \'</span><span class=\"sy0\">.</span><span class=\"re0\">$resultados</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">rowCount</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st_h\">\'&lt;/p&gt;\'</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n	<span class=\"co1\">//Desconectar</span>\r\n	<span class=\"re0\">$ligacao</span> <span class=\"sy0\">=</span> <span class=\"kw4\">null</span><span class=\"sy0\">;</span>\r\n<span class=\"br0\">}</span>\r\ncatch<span class=\"br0\">(</span>PDOException <span class=\"re0\">$erro</span><span class=\"br0\">)</span>\r\n<span class=\"br0\">{</span>\r\n	<span class=\"kw1\">echo</span> <span class=\"re0\">$erro</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n<span class=\"br0\">}</span>\r\n&nbsp;\r\n<span class=\"sy1\">?&gt;</span></code></pre><h3 style=\"margin-left: 0px;\">Conectar um banco SQL Server usando PDO</h3><p>Windows</p><p style=\"margin-left: 0px;\">Este exemplo funciona na versão 5.2 do PHP. Para utilização em servidores Windows 2008, há de alterar a versão do php via web.config tendo em vista que a versão padrão em windows 2008 é a PHP 5.3.</p><ul><li>Arquivo: PDO_SQLserver.php</li></ul><pre><code><span class=\"kw2\">&lt;?php</span>\r\ntry <span class=\"br0\">{</span>\r\n    <span class=\"re0\">$hostname</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"sqlserver01.bancodedados.com\"</span><span class=\"sy0\">;</span>\r\n    <span class=\"re0\">$dbname</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"nomebanco\"</span><span class=\"sy0\">;</span>\r\n    <span class=\"re0\">$username</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"nomebanco\"</span><span class=\"sy0\">;</span>\r\n    <span class=\"re0\">$pw</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"senha\"</span><span class=\"sy0\">;</span>\r\n    <span class=\"re0\">$pdo</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> PDO <span class=\"br0\">(</span><span class=\"st0\">\"mssql:host=<span class=\"es4\">$hostname</span>;dbname=<span class=\"es4\">$dbname</span>\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"<span class=\"es4\">$username</span>\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"<span class=\"es4\">$pw</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n  <span class=\"br0\">}</span> catch <span class=\"br0\">(</span>PDOException <span class=\"re0\">$e</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\r\n    <span class=\"kw1\">echo</span> <span class=\"st0\">\"Erro de Conexão \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$e</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span>\r\n    <span class=\"kw3\">exit</span><span class=\"sy0\">;</span>\r\n  <span class=\"br0\">}</span>\r\n      <span class=\"re0\">$query</span> <span class=\"sy0\">=</span> <span class=\"re0\">$pdo</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">prepare</span><span class=\"br0\">(</span><span class=\"st0\">\"select Coluna FROM nome_tabela\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n      <span class=\"re0\">$query</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">execute</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n      <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$row</span> <span class=\"sy0\">=</span> <span class=\"re0\">$query</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">fetch</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span>\r\n        <span class=\"kw1\">echo</span> <span class=\"re0\">$i</span><span class=\"sy0\">.</span><span class=\"st0\">\" - \"</span><span class=\"sy0\">.</span><span class=\"re0\">$row</span><span class=\"br0\">[</span><span class=\"st_h\">\'Coluna\'</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"st0\">\"&lt;br/&gt;\"</span><span class=\"sy0\">;</span>\r\n      <span class=\"br0\">}</span>\r\n&nbsp;\r\n      <span class=\"kw3\">unset</span><span class=\"br0\">(</span><span class=\"re0\">$pdo</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> \r\n      <span class=\"kw3\">unset</span><span class=\"br0\">(</span><span class=\"re0\">$query</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n<span class=\"sy1\">?&gt;</span></code></pre><p>Linux</p><ul><li>Arquivo: PDO_SQLserver.php</li></ul><pre><code><span class=\"kw2\">&lt;?php</span>\r\ntry <span class=\"br0\">{</span>\r\n    <span class=\"re0\">$hostname</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"sqlserver01.bancodedados.com\"</span><span class=\"sy0\">;</span>\r\n    <span class=\"re0\">$dbname</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"nomebanco\"</span><span class=\"sy0\">;</span>\r\n    <span class=\"re0\">$username</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"nomebanco\"</span><span class=\"sy0\">;</span>\r\n    <span class=\"re0\">$pw</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"senha\"</span><span class=\"sy0\">;</span>\r\n    <span class=\"re0\">$pdo</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> PDO <span class=\"br0\">(</span><span class=\"st0\">\"dblib:host=<span class=\"es4\">$hostname</span>;dbname=<span class=\"es4\">$dbname</span>\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"<span class=\"es4\">$username</span>\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"<span class=\"es4\">$pw</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n  <span class=\"br0\">}</span> catch <span class=\"br0\">(</span>PDOException <span class=\"re0\">$e</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\r\n    <span class=\"kw1\">echo</span> <span class=\"st0\">\"Erro de Conexão \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$e</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span>\r\n    <span class=\"kw3\">exit</span><span class=\"sy0\">;</span>\r\n  <span class=\"br0\">}</span>\r\n      <span class=\"re0\">$query</span> <span class=\"sy0\">=</span> <span class=\"re0\">$pdo</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">prepare</span><span class=\"br0\">(</span><span class=\"st0\">\"select Coluna FROM nome_tabela\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n      <span class=\"re0\">$query</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">execute</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n      <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$row</span> <span class=\"sy0\">=</span> <span class=\"re0\">$query</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">fetch</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span>\r\n        <span class=\"kw1\">echo</span> <span class=\"re0\">$i</span><span class=\"sy0\">.</span><span class=\"st0\">\" - \"</span><span class=\"sy0\">.</span><span class=\"re0\">$row</span><span class=\"br0\">[</span><span class=\"st_h\">\'Coluna\'</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"st0\">\"&lt;br/&gt;\"</span><span class=\"sy0\">;</span>\r\n      <span class=\"br0\">}</span>\r\n&nbsp;\r\n      <span class=\"kw3\">unset</span><span class=\"br0\">(</span><span class=\"re0\">$pdo</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> \r\n      <span class=\"kw3\">unset</span><span class=\"br0\">(</span><span class=\"re0\">$query</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n<span class=\"sy1\">?&gt;</span></code></pre><h3 style=\"margin-left: 0px;\">Como conectar a um banco SQLite3 via PDO</h3><p style=\"margin-left: 0px;\">Os seguintes passos demonstram como se conectar a um banco SQLite3, como criar tabelas, inserir dados e visualizar dados de uma tabela via PDO.</p><ul><li>Conectar à base</li></ul><pre><code><span class=\"kw2\">&lt;?php</span>\r\n<span class=\"co1\">//Atribui um novo objeto com o banco criado anteriormente</span>\r\n<span class=\"co1\">//Supondo que o arquivo do banco de dados (banco.db) esteja ou será criado no mesmo diretório que o do php; </span>\r\n<span class=\"co1\">//mas pode indicar um outro diretório também. </span>\r\n<span class=\"co1\">//Ex: $db = new PDO(\"sqlite:~/public_hmtl/banco.db\"); - conforme sua necessidade</span>\r\n&nbsp;\r\n<span class=\"re0\">$db</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> PDO<span class=\"br0\">(</span><span class=\"st0\">\"sqlite:banco.db\"</span><span class=\"br0\">)</span> or <span class=\"kw3\">die</span><span class=\"br0\">(</span><span class=\"st0\">\"Erro ao abrir a base\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n<span class=\"sy1\">?&gt;</span></code></pre><ul><li>Criar tabelas</li></ul><pre><code><span class=\"kw2\">&lt;?php</span>\r\n<span class=\"re0\">$db</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> PDO<span class=\"br0\">(</span><span class=\"st0\">\"sqlite:banco.db\"</span><span class=\"br0\">)</span> or <span class=\"kw3\">die</span><span class=\"br0\">(</span><span class=\"st0\">\"Erro ao abrir a base\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n<span class=\"co1\">//cria a tabela</span>\r\n<span class=\"re0\">$sqlC</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"CREATE TABLE suporte ( id INTEGER PRIMARY KEY, nome TEXT)\"</span><span class=\"sy0\">;</span>\r\n<span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"kw3\">exec</span><span class=\"br0\">(</span><span class=\"re0\">$sqlC</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n<span class=\"sy1\">?&gt;</span></code></pre><ul><li>Inserir dados em uma tabela</li></ul><pre><code><span class=\"kw2\">&lt;?php</span>\r\n&nbsp;\r\n<span class=\"re0\">$db</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> PDO<span class=\"br0\">(</span><span class=\"st0\">\"sqlite:banco.db\"</span><span class=\"br0\">)</span> or <span class=\"kw3\">die</span><span class=\"br0\">(</span><span class=\"st0\">\"Erro ao abrir a base\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n<span class=\"co1\">//insere os dados</span>\r\n<span class=\"re0\">$sqlI</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"INSERT INTO suporte (id, nome) VALUES (NULL, \'Arielton Santos\')\"</span><span class=\"sy0\">;</span>\r\n<span class=\"re0\">$stmt</span> <span class=\"sy0\">=</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"kw3\">exec</span><span class=\"br0\">(</span><span class=\"re0\">$sqlI</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n<span class=\"sy1\">?&gt;</span></code></pre><ul><li>Visualizar dados de uma tabela</li></ul><pre><code><span class=\"kw2\">&lt;?php</span>\r\n&nbsp;\r\n<span class=\"re0\">$db</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> PDO<span class=\"br0\">(</span><span class=\"st0\">\"sqlite:banco.db\"</span><span class=\"br0\">)</span> or <span class=\"kw3\">die</span><span class=\"br0\">(</span><span class=\"st0\">\"Erro ao abrir a base\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n&nbsp;\r\n<span class=\"co1\">//visualiza</span>\r\n<span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">query</span><span class=\"br0\">(</span><span class=\"st0\">\"SELECT id, nome FROM suporte\"</span><span class=\"br0\">)</span> <span class=\"kw1\">as</span> <span class=\"re0\">$row</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\r\n<span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$row</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\r\n<span class=\"kw1\">echo</span> <span class=\"st0\">\"&lt;br&gt;\"</span><span class=\"sy0\">;</span>\r\n<span class=\"br0\">}</span>\r\n&nbsp;\r\n<span class=\"sy1\">?&gt;</span></code></pre><p style=\"margin-left: 0px;\">O código mencionado acima é somente um exemplo. Caso haja dúvidas quanto sua utilização, sugerimos que verifique juntamente a um desenvolvedor de sua confiança.</p><p style=\"margin-left: 0px;\">Aproveite e conheça outros produtos da Locaweb, como o Hospedagem de Sites,&nbsp;<a href=\"https://www.locaweb.com.br/hospedagem-de-sites-com-dominio-gratis/\" target=\"_blank\">clique aqui</a>&nbsp;e saiba mais!</p>',1,'2021-12-24'),(2,'Boas práticas de programação em PHP','<p>Porque falar de boas práticas e não do mais novo&nbsp;framework&nbsp;do mercado? (Desde já fica aqui ressalva de que não é uma afirmação para desencorajar o uso de frameworks.)<br></p><p>Nós vamos falar de boas práticas porque isso pode agilizar — e muito — o dia de alguém, além de evitar que erros minem a produtividade.<br></p><p>E, claro, falar de boas práticas é sempre oportuno e necessário para o desempenho futuro do que quer que seja estejamos construindo.<br></p><p>Vamos lá!</p><p>Conteúdo&nbsp;&nbsp;<a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#\">ocultar</a>&nbsp;</p><p><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Ainda_vale_a_pena_aprender_PHP\">1&nbsp;Ainda vale a pena aprender PHP?</a></p><p><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Cursos_de_PHP\">2&nbsp;Cursos de PHP</a></p><p><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Dicas_ser_eficiente_ao_programar_em_PHP\">3&nbsp;Dicas ser eficiente ao programar em PHP</a><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Busque_boas_referencias_de_programacao_em_PHP\">3.1&nbsp;Busque boas referências de programação em PHP</a></p><p><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Use_as_versoes_suportadas_do_PHP\">3.2&nbsp;Use as versões suportadas do PHP</a></p><p><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Boas_praticas_de_codigo_com_SOLID\">3.3&nbsp;Boas práticas de código com SOLID</a></p><p><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Single_Responsability_-_Responsabilidade_unica\">3.4&nbsp;Single Responsability – Responsabilidade única.</a></p><p><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Open_Closed_-_Aberto_Fechado\">3.5&nbsp;Open Closed – Aberto Fechado.</a></p><p><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Liskov_Substitution_Principle_-_Substituicao_de_Liskov\">3.6&nbsp;Liskov Substitution Principle – Substituição de Liskov</a></p><p><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Interface_SegregationPrinciple_Segregacao\">3.7&nbsp;Interface Segregation/Principle Segregação.</a></p><p><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Dependency_Inversion_Principle_-_Inversao_de_dependencia\">3.8&nbsp;Dependency Inversion Principle – Inversão de dependência.</a></p><p><a href=\"https://blog.geekhunter.com.br/boas-praticas-de-programacao-em-php/#Teste_seu_software\">3.9&nbsp;Teste seu software</a></p><h2>Ainda vale a pena aprender PHP?</h2><p><img width=\"960\" height=\"581\" src=\"https://blog.geekhunter.com.br/wp-content/uploads/2019/03/ainda-vale-a-pena-aprender-php.jpg\" alt=\"lousa com ponto de interrogaçao desenhado em giz\"></p><p>PHP é uma das linguagens de programação mais utilizadas no mundo. Ela foi criada para facilitar o&nbsp;desenvolvimento web&nbsp;e é utilizada principalmente para a criação de&nbsp;sites e blogs.</p><p>Em média 86% das aplicações web hoje no mundo utilizam PHP como linguagem primária.&nbsp;</p><p>Então sim, ainda vale a pena&nbsp;<a href=\"https://www.alura.com.br/formacao-desenvolvedor-php\" target=\"_blank\">aprender PHP</a>. Essa linguagem está em evolução constante, sempre sendo atualizada e tem uma grande comunidade de usuários.</p><p>Para uma explicação mais completa, assista ao vídeo:</p><h2>Cursos de PHP</h2><p><img width=\"960\" height=\"639\" src=\"https://blog.geekhunter.com.br/wp-content/uploads/2019/07/cursos-de-php.jpg\" alt=\"mulher bebendo cafe e olhando o computador\"></p><p>Separei alguns bons cursos de PHP para aqueles que estiverem com vontade de aprender:</p><ul><li><a href=\"https://b7web.com.br/php/\" target=\"_blank\">PHP Do Zero Ao Profissional</a></li><li><a href=\"https://www.devmedia.com.br/curso/curso-mestre-detalhe-php/2197\" target=\"_blank\">Construindo uma aplicação mestre detalhe em PHP</a></li><li><a href=\"https://www.impacta.com.br/ics/ICS-PHP-Developer.php\" target=\"_blank\">Full Stack PHP Developer</a></li><li><a href=\"https://www.udemy.com/curso-completo-de-php-profissional/\" target=\"_blank\">Curso Completo de PHP Profissional</a></li><li><a href=\"https://www.alura.com.br/formacao-desenvolvedor-php\" target=\"_blank\">Formação Desenvolvedor PHP</a></li></ul><h2>Dicas ser eficiente ao programar em PHP</h2><p><img width=\"1024\" height=\"687\" src=\"https://blog-geek-midia.s3.amazonaws.com/wp-content/uploads/2019/03/14150854/php-tutorial-como-programar-bem-min-1-1024x687.jpg\" alt=\"\"></p><h3>Busque boas referências de programação em PHP</h3><p>Bom, para começar quero apenas reforçar o que provavelmente você já deve ter ouvido, mas que vale ser relembrado: fique sempre atento(a) às referências. Qual o seu canal de informação hoje?<br></p><p>Uma de nossas referências primárias deve ser o manual da própria linguagem. No nosso caso,&nbsp;<a href=\"https://php.net/docs.php\" target=\"_blank\">Manual do PHP</a>. Aqui tem muita documentação da linguagem.<br></p><p>Outra referência interessante feita pela&nbsp;<a href=\"http://br.phptherightway.com/\" target=\"_blank\">comunidade PHP</a>, pode ser encontrada por esse link que indico.</p><p>&gt;&gt;Leitura Recomendada:<br><a href=\"https://blog.geekhunter.com.br/ide-para-php-e-js-qual-a-ideal/\" target=\"_blank\">IDE para PHP&nbsp;</a>e JS: qual a ideal?</p><h3>Use as versões suportadas do PHP</h3><p>Use sempre uma versão atualizada do PHP.<br></p><p>Atualmente, recomendado-se usar o PHP a partir da versão 7.1.<br></p><p>É importante frisar que cada versão do PHP é suportada por 3 anos e, após isso, ela entra no fim do ciclo de vida. Aqui você consegue&nbsp;<a href=\"https://php.net/supported-versions.php\" target=\"_blank\">consultar versões suportadas PHP</a>. &nbsp;<br></p><h3>Boas práticas de código com SOLID</h3><p>SOLID é uma abreviação para cinco princípios de&nbsp;<a href=\"https://www.eduardopires.net.br/2013/04/orientacao-a-objeto-solid/\" target=\"_blank\">boas práticas em desenvolvimento de software orientado a objetos</a>. As boas práticas foram divulgados por&nbsp;Robert C. Martin, autor do famoso livro&nbsp;Código Limpo.<br></p><p><span style=\"color: rgb(0, 0, 0); font-size: 20px;\">Single Responsability</span><span style=\"color: rgb(0, 0, 0); font-size: 20px;\">&nbsp;</span><span style=\"color: rgb(0, 0, 0); font-size: 20px;\">– Responsabilidade única.</span></p><p>Este princípio define que uma classe deve ter uma única responsabilidade. Isso facilita muito o teste e manutenção de nossas classes.<br></p><p>Um exemplo da quebra desse princípio é o método — bem usado, inclusive — para validar os dados de uma classe. Esse método faz com que os dados sejam atualizados no banco de dados também.<br></p><p>É importante lembrar que são 2 coisas com responsabilidades distintas e devem estar separadas.<br></p><h3>Open Closed&nbsp;– Aberto Fechado.</h3><p>Esa segunda ideia propõe que uma classe deve estar aberta para ser estendida/herdada, mas que precisa estar fechada para que as alterações sejam realizadas.<br></p><p>Fazendo isso, outras classes podem herdar e reutilizar o seu conteúdo sem ter que alterar o comportamento da classe pai. Este é um exemplo bem básico, mas em que é possível ver o conceito.<br></p><p>A partir da Interface ‘Animal’ podemos implementar outros animais, lembrando que a interface obriga a implementação de todos os métodos.</p><pre><code><br><span style=\"font-weight: bolder;\">&lt;?php <br>interface &nbsp;Animal {    <br> &nbsp;&nbsp;&nbsp;public function emitirSom(); <br>}<br>&nbsp;<br>class Cachorro implements &nbsp;Animal {    <br> &nbsp;&nbsp;&nbsp;public function emitirSom() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo \"latir\";<br> &nbsp;&nbsp;&nbsp;}<br>}<br>&nbsp;<br>class Pato implements Animal { &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;public function emitirSom() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo \"quack quack\"; &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;}<br>}<br>?&gt;</span><br> <br></code></pre><h3>Liskov Substitution Principle&nbsp;– Substituição de Liskov</h3><p>Este princípio recebe o nome de sua autora, Barbara Liskov, uma cientista da computação e professora do MIT<br></p><p>Se quiser saber mais sobre ela, aqui está o&nbsp;perfil de Barbara Liskov no Wikipedia.<br></p><p>A ideia deste princípio é a seguinte:<br></p><p>Objetos em um programa devem ser substituídos por instâncias de seus subtipos, sem alterar a funcionalidade do programa.<br></p><p>Ficou complicado ? Vamos melhorar isso:<br></p><p>A classe filha, que estende o comportamento de uma outra classe, não pode alterar, tornar mais restrito a implementação de um recurso da classe pai.<br></p><p>Isto nos faz repensar o uso da herança, e vemos que a ideia anterior de ‘aberto para extensão’ e ‘fechar a alteração’ está ligada com esse princípio de substituição de Liskov.<br></p><p>O exemplo clássico da quebra desse padrão acontece com a implementação da classe Quadrado, que estende a classe Retângulo.<br></p><p>Na geometria todo quadrado é um retângulo, então implementamos a classe Quadrado a partir da classe Retângulo, mas com a alteração para que ambos os lados sejam iguais.</p><pre><code> <br><span style=\"font-weight: bolder;\">class Retangulo {<br> &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;private $altura;<br> &nbsp;&nbsp;&nbsp;private $largura;<br> &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;public function getAltura() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;altura;<br> &nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;public function getLargura() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;largura;<br> &nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;public function setAltura($valor) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;altura = $valor;<br> &nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;public function setLargura($valor) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;largura = $valor;<br> &nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;public function calcularArea() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return \"A area é \". $this-&gt;getAltura() * $this-&gt;getLargura();<br> &nbsp;&nbsp;&nbsp;}<br>}<br>&nbsp;<br>class Quadrado extends Retangulo {<br> &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;public function getAltura() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;altura;<br> &nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;public function getLargura() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;largura;<br> &nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;public function setAltura($valor) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;altura = $valor;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;largura = $valor;<br> &nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;public function setLargura($valor) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;largura = $valor;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;altura = $valor;<br> &nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;public function calcularArea() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return parent::calcularArea(); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;<br>}</span><br> <br></code></pre><p>Ao testarmos esse código, teremos a prova de que essa implementação não simulará o comportamento esperado do cálculo da área.<br></p><p>Isso demonstra que não vai ser correto dizer que a classe Quadrado é uma classe Retângulo e também temos a quebra do princípio de Liskov.</p><p>&gt;&gt;Leitura Recomendada:<br>Que tal ler o artigo que fizemos sobre as&nbsp;<a href=\"https://blog.geekhunter.com.br/melhores-linguagens-de-programacao-para-devs-iniciantes/\" target=\"_blank\">melhores linguagens de programações</a>&nbsp;pro dev iniciante aprender?</p><h3>Interface Segregation/Principle Segregação.</h3><p>A correta aplicação dessa ideia está totalmente ligada a encontrar a abstração correta do comportamento da nossa implementação.<br></p><p>Exemplo 1:.&nbsp;ISS, IR, IPI. Todas essas siglas são impostos.<br></p><p>Exemplo 2:.&nbsp;&nbsp;Gato, cachorro, papagaio. Todas essas palavras representam animais.<br></p><p>Com esses exemplos, vamos pensando sobre a abstração e como melhor implementar a nossa solução em orientação a objetos.<br></p><h3>Dependency Inversion Principle&nbsp;– Inversão de dependência.</h3><p>Este último princípio propõe que as classes devem depender de abstrações.<br></p><p>Abstrações não devem depender dos detalhes, mas os detalhes dependem da abstração.</p><p>Classes de alto nível não dependem das classes de baixo nível. O correto é que ambos dependam de abstrações.<br></p><p>Vejamos o clássico exemplo da implementação do botão de lâmpada:<br></p><pre><code> <br><span style=\"font-weight: bolder;\">&lt;?php<br>&nbsp;<br>class Botao {<br>&nbsp;<br> &nbsp;&nbsp;&nbsp;private $lampada;<br>&nbsp;<br> &nbsp;&nbsp;&nbsp;public function __construct(Lampada $lampada) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;lampada = $lampada;<br> &nbsp;&nbsp;&nbsp;}<br>&nbsp;<br> public function Acionar() {<br> &nbsp;&nbsp;&nbsp;  &nbsp;if (!$this-&gt;lampada-&gt;ligado) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &nbsp;&nbsp;&nbsp;$this-&gt;lampada-&gt;ligar();<br> &nbsp;&nbsp;&nbsp;  &nbsp;}<br> }<br>}<br>&nbsp;<br>Esta implementação quebra o princípio de inversão de dependência, pois a classe Botão depende da classe lâmpada.<br>&nbsp;<br>O Botão sabe os detalhes da implementação. Alterações na classe lâmpada também irão requerer alterações na classe Botão.<br>&nbsp;<br>Faremos uma abstração e para melhorar esta implementação com &nbsp;a inversão de dependência.<br>&nbsp;<br>interface Dispositivio {<br>&nbsp;<br> &nbsp;&nbsp;&nbsp;public function ligar()<br>&nbsp;<br> &nbsp;&nbsp;&nbsp;public function desligar()<br>}<br>&nbsp;<br>class Lampada implements Dispostivo {<br>&nbsp;<br> &nbsp;&nbsp;&nbsp;public function ligar() {<br> &nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;}<br>&nbsp;<br> &nbsp;&nbsp;&nbsp;public function desligar() {<br>&nbsp;<br> &nbsp;&nbsp;}<br>}<br>&nbsp;<br>class Botao {<br>&nbsp;<br> &nbsp;&nbsp;&nbsp;private $dispositivo;<br>&nbsp;<br> &nbsp;&nbsp;&nbsp;public function __construct(Dispositivo $dispositivo) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;dispositivo = $dispositivo;<br> &nbsp;&nbsp;&nbsp;}<br>&nbsp;<br> &nbsp;&nbsp;&nbsp;public function Acionar() {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!$this-&gt;dispostivio-&gt;ligado) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;dispositivo-&gt;ligar();<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;}<br>}</span><br> <br></code></pre><p><img width=\"1024\" height=\"134\" alt=\"\" src=\"data:image/svg+xml,%3Csvg%20xmlns=\'http://www.w3.org/2000/svg\'%20viewBox=\'0%200%201024%20134\'%3E%3C/svg%3E\"></p><h3>Teste seu software</h3><blockquote><p><br>“Você não tem nada a perder, a não ser os seus bugs”</p><p>Steve Freeman.</p></blockquote><p>Não é apenas uma boa prática, mas digamos que seja essencial para a qualidade, evolução e redução de custos com desenvolvimento de software.<br></p><p>Alguns questionam a adoção dessa prática por demandar mais tempo no desenvolvimento. &nbsp;<br></p><p>Essas pessoas não estão levando em conta que o desenvolvimento guiado a testes nos proporciona qualidade no produto final.<br></p><p>Exemplos de testes que podem ser feitos em uma aplicação: Testes unitários, Testes de integração e Testes funcionais.<br></p><p>Testes unitários validam se as nossas classes, métodos e funções estão funcionando conforme o esperado.<br></p><p>Sua metodologia funciona em cima do conceito de primeiro escrevermos o teste, antes da implementação do sistema.<br></p><p>Em resumo, os testes nos garantem que as nossas funcionalidades estão operando corretamente e nos levando ao &nbsp;próximo passo, que é testar a integração desses componentes por meio, logicamente, de testes de integração.</p><p>Essas são algumas boas práticas que escolhi dividir com vocês neste artigo. Existem diversas outras que você pode adotar também. O objetivo é incentivar o bom desenvolvimento de software e a busca por outras boas práticas.</p><p>Crie um perfil na GeekHunter e receba propostas alinhadas ao seu perfil. São mais de 1000 vagas abertas, inclusive&nbsp;<a href=\"https://www.geekhunter.com.br/vagas-php\" target=\"_blank\">Vagas PHP</a>.</p>',1,'2021-12-24'),(3,'Como começar com PHP?','<p style=\"margin-left: 0px;\">O PHP costuma ser uma das primeiras linguagens escolhida pelos estudantes quando se trata de Web, muito pela alta adoção no mercado de trabalho como também pela baixa de curva de aprendizagem.</p><p style=\"margin-left: 0px;\">Se o seu foco é desenvolver sites e aplicações web, é um ótimo negócio investir seu tempo no estudo de PHP, ademais, estamos falando da linguagem mais utilizada na web, cerca de ~82% de todos os sites a utilizam.</p><h2 style=\"margin-left: 0px;\">O que é o PHP?</h2><p style=\"margin-left: 0px;\">O&nbsp;<a href=\"https://www.treinaweb.com.br/blog/o-que-e-php/\">PHP</a>&nbsp;é uma das linguagens de programação web mais populares. Ele tem a capacidade de se misturar com HTML&nbsp;(HyperText Markup Language), tornando-o bastante intuitivo para se desenvolver para web. O PHP é interpretado no servidor e envia para o cliente apenas a resposta (seja&nbsp;<a href=\"https://www.treinaweb.com.br/blog/o-que-e-e-como-comecar-com-html-e-css/\">HTML</a>,&nbsp;<a href=\"https://www.treinaweb.com.br/blog/o-que-e-xml/\">XML</a>,&nbsp;<a href=\"https://www.treinaweb.com.br/blog/o-que-e-json/\">JSON</a>&nbsp;etc).</p><h2 style=\"margin-left: 0px;\">Quem usa PHP? E o que pode ser feito?</h2><p style=\"margin-left: 0px;\">Muitos dos sites que você encontra pela internet são feitos em PHP, isso porque a maioria deles utilizam algum&nbsp;<a href=\"https://www.treinaweb.com.br/blog/tag/cms/\">CMS</a>&nbsp;(Sistema de Gerenciamento de Conteúdo) e os mais famosos são escritos em PHP como o&nbsp;<a href=\"https://www.treinaweb.com.br/blog/o-que-e-wordpress-e-como-instalar-na-sua-maquina/\">WordPress</a>,&nbsp;<a href=\"https://www.treinaweb.com.br/blog/o-que-e-drupal/\">Drupal</a>, Joomla, entre outros.</p><p style=\"margin-left: 0px;\">Outros exemplos que podemos destacar que utilizam o PHP é o Wikipédia e o Facebook. Isso mostra o seu poderio tanto para pequenos quanto para grandes e estabelecidas aplicações.</p><h2 style=\"margin-left: 0px;\">Sintaxe do PHP</h2><p style=\"margin-left: 0px;\">A sintaxe do PHP é bastante intuitiva e, quando aliado a algum HTML, por exemplo, tudo o que precisamos fazer é usar a diretiva de abertura e a de fechamento:</p><p>Copiar</p><pre><code><span class=\"token doctype\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(60, 82, 109);\"><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(17, 27, 39);\">&lt;!</span><span class=\"token doctype-tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">DOCTYPE</span> <span class=\"token name\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">html</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(17, 27, 39);\">&gt;</span></span>\r\n<span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\"><span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\"><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&lt;</span>html</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&gt;</span></span>\r\n    <span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\"><span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\"><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&lt;</span>body</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&gt;</span></span>\r\n        <span class=\"token php language-php\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\"><span class=\"token delimiter important\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\">&lt;?php</span>\r\n            <span class=\"token keyword\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(160, 73, 0);\">echo</span> <span class=\"token string double-quoted-string\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(17, 107, 0);\">\"Hello World\"</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">;</span>\r\n        <span class=\"token delimiter important\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\">?&gt;</span></span>\r\n    <span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\"><span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\"><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&lt;/</span>body</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&gt;</span></span>\r\n<span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\"><span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\"><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&lt;/</span>html</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&gt;</span></span>\r\n</code></pre><ul><li>`` é a diretiva de fechamento;</li></ul><p style=\"margin-left: 0px;\">Depois de interpretado no servidor, o que será enviado para o cliente (no nosso contexto estamos falando de um navegador web) será:</p><p>Copiar</p><pre><code><span class=\"token doctype\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(60, 82, 109);\"><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(17, 27, 39);\">&lt;!</span><span class=\"token doctype-tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">DOCTYPE</span> <span class=\"token name\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">html</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(17, 27, 39);\">&gt;</span></span>\r\n<span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\"><span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\"><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&lt;</span>html</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&gt;</span></span>\r\n    <span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\"><span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\"><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&lt;</span>body</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&gt;</span></span>\r\n        Hello World\r\n    <span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\"><span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\"><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&lt;/</span>body</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&gt;</span></span>\r\n<span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\"><span class=\"token tag\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\"><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&lt;/</span>html</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">&gt;</span></span>\r\n</code></pre><p style=\"margin-left: 0px;\">Ou seja, apenas o HTML processado.</p><p style=\"margin-left: 0px;\">O PHP é uma linguagem interpretada e de tipagem fraca (dinâmica), não sendo necessário especificar o tipo das variáveis, ele decide isso em tempo de execução.</p><p style=\"margin-left: 0px;\">Veja um exemplo:</p><p>Copiar</p><pre><code><span class=\"token delimiter important\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\">&lt;?php</span>\r\n\r\n<span class=\"token variable\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 90, 142);\">$nome</span> <span class=\"token operator\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(160, 73, 0);\">=</span> <span class=\"token string double-quoted-string\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(17, 107, 0);\">\"TreinaWeb\"</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">;</span>\r\n\r\n<span class=\"token keyword\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(160, 73, 0);\">echo</span> <span class=\"token string double-quoted-string\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(17, 107, 0);\">\"Olá, você está lendo um artigo do <span class=\"token interpolation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\"><span class=\"token variable\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 90, 142);\">$nome</span></span>\"</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">;</span>\r\n</code></pre><p style=\"margin-left: 0px;\">Este pequeno trecho irá imprimir:</p><blockquote><p style=\"margin-left: 0px;\">Olá, você está lendo um artigo do TreinaWeb</p></blockquote><p style=\"margin-left: 0px;\">Outra característica do PHP é que ele é uma linguagem multiparadigma, de tal forma que um mesmo script possa incorporar características imperativas, funcionais, orientada a objetos etc.</p><p style=\"margin-left: 0px;\">Exemplo:</p><p>Copiar</p><pre><code><span class=\"token delimiter important\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 109, 109);\">&lt;?php</span>\r\n\r\n<span class=\"token keyword\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(160, 73, 0);\">class</span> <span class=\"token class-name-definition class-name\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 90, 142);\">Gato</span> <span class=\"token keyword\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(160, 73, 0);\">extends</span> <span class=\"token class-name\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 90, 142);\">Animal</span>\r\n<span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">{</span>\r\n    <span class=\"token keyword\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(160, 73, 0);\">public</span> <span class=\"token keyword\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(160, 73, 0);\">function</span> <span class=\"token function-definition function\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(124, 0, 170);\">miar</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">(</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">)</span>\r\n    <span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">{</span>\r\n        <span class=\"token keyword\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(160, 73, 0);\">echo</span> <span class=\"token string double-quoted-string\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(17, 107, 0);\">\"miau\"</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">;</span>\r\n    <span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">}</span>\r\n<span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">}</span>\r\n\r\n<span class=\"token variable\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 90, 142);\">$gato</span> <span class=\"token operator\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(160, 73, 0);\">=</span> <span class=\"token keyword\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(160, 73, 0);\">new</span> <span class=\"token class-name\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 90, 142);\">Gato</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">(</span><span class=\"token string double-quoted-string\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(17, 107, 0);\">\"Chico José\"</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">)</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">;</span>\r\n<span class=\"token variable\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(0, 90, 142);\">$gato</span><span class=\"token operator\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(160, 73, 0);\">-&gt;</span><span class=\"token function\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important; color: rgb(124, 0, 170);\">miar</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">(</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">)</span><span class=\"token punctuation\" style=\"box-sizing: inherit; border: 0px; font: inherit; margin: 0px; padding: 0px; vertical-align: baseline; background: transparent !important;\">;</span>\r\n</code></pre><p style=\"margin-left: 0px;\">Há de se destacar que o PHP possui um respeitado suporte à orientação a objetos, que é um dos paradigmas mais utilizados no mercado de trabalho.</p><p style=\"margin-left: 0px;\">O PHP possui dezenas de extensões nativas para trabalhar com as mais diversas necessidades possíveis. É uma completa plataforma para desenvolvimento web.</p><h2 style=\"margin-left: 0px;\">Mercado de trabalho</h2><p style=\"margin-left: 0px;\">A oferta de vagas para programadores PHP é imensa e está em constante expansão. Segundo o site&nbsp;<a href=\"https://www.tiobe.com/tiobe-index/\" target=\"_blank\">TIOBE</a>&nbsp;(Programming Community Index Definition), o PHP é uma das dez linguagens mais utilizadas no mundo.</p><p style=\"margin-left: 0px;\">Um programador PHP tem seu lugar garantido no mercado, desde que sempre esteja em constante aprendizado e claro, acompanhando as mudanças e a evolução da linguagem e do seu ecossistema.</p><h2 style=\"margin-left: 0px;\">Como anda o PHP atualmente?</h2><p style=\"margin-left: 0px;\">Super recomendamos a leitura do artigo “<a href=\"https://www.treinaweb.com.br/blog/o-php-e-o-seu-ecossistema-nunca-estiveram-tao-fortes/\">O PHP e o seu ecossistema nunca estiveram tão fortes</a>”. Um panorama geral sobre o PHP e as novidades.</p>',1,'2021-12-24'),(4,'Sua primeira página PHP ','<p style=\"margin-left: 0px;\">Crie um novo arquivo chamado&nbsp;ola.php&nbsp;e coloque-o no diretório root do seu servidor web (DOCUMENT_ROOT) com o seguinte conteúdo:</p><p style=\"margin-left: 0px;\">Exemplo #1 Nosso primeiro script PHP:&nbsp;ola.php</p><p><code><span style=\"color: rgb(0, 0, 0);\">&lt;html&gt;<br>&nbsp;&lt;head&gt;<br>&nbsp;&nbsp;&lt;title&gt;Teste&nbsp;PHP&lt;/title&gt;<br>&nbsp;&lt;/head&gt;<br>&nbsp;&lt;body&gt;<br>&nbsp;<span style=\"color: rgb(0, 0, 187);\">&lt;?php&nbsp;</span><span style=\"color: rgb(0, 119, 0);\">echo&nbsp;</span><span style=\"color: rgb(221, 0, 0);\">\"&lt;p&gt;Olá&nbsp;Mundo&lt;/p&gt;\"</span><span style=\"color: rgb(0, 119, 0);\">;&nbsp;</span><span style=\"color: rgb(0, 0, 187);\">?&gt;<br></span>&nbsp;&lt;/body&gt;<br>&lt;/html&gt;</span></code></p><p style=\"margin-left: 0px;\">Use o seu navegador para acessar o arquivo com a URL de seu servidor web, terminando com a referência ao arquivo&nbsp;<code class=\"literal\">/ola.php</code>. Quando o desenvolvimento for local está URL será algo como&nbsp;<code class=\"literal\"><a href=\"http://localhost/ola.php\" rel=\"nofollow\">http://localhost/ola.php</a></code>&nbsp;ou&nbsp;<code class=\"literal\"><a href=\"http://127.0.0.1/ola.php\" rel=\"nofollow\">http://127.0.0.1/ola.php</a></code>&nbsp;mas isso depende da configuração do seu servidor web. Se tudo foi configurado corretamente, este arquivo será interpretado pelo PHP e a seguinte mensagem será enviada ao seu navegador:</p><pre><code><font style=\"vertical-align: inherit;\">&lt;html&gt;</font><font style=\"vertical-align: inherit;\">\r\n &lt;head&gt;</font><font style=\"vertical-align: inherit;\">\r\n  &lt;title&gt; Teste PHP &lt;/title&gt;</font><font style=\"vertical-align: inherit;\">\r\n &lt;/head&gt;</font><font style=\"vertical-align: inherit;\">\r\n &lt;body&gt;</font>\r\n &lt;p&gt;Olá Mundo&lt;/p&gt;<font style=\"vertical-align: inherit;\">\r\n &lt;/body&gt;</font><font style=\"vertical-align: inherit;\">\r\n&lt;/html&gt;</font>\r\n</code></pre><p style=\"margin-left: 0px;\">Este programa é realmente simples e você não precisa do PHP para criar uma página assim (fixa). Tudo o que ela faz é mostrar:&nbsp;<code class=\"literal\">Hello World</code>&nbsp;utilizando a instrução&nbsp;<a href=\"https://www.php.net/manual/pt_BR/function.echo.php\">echo</a>. Note que o arquivo&nbsp;não precisa ser executável&nbsp;ou especial. O servidor web descobre que este arquivo precisa ser interpretado pelo PHP por causa da extensão \".php\", que o servidor é configurado para repassar ao PHP. Pense nisso como um arquivo HTML normal que por acaso possui um conjunto de tags especiais disponíveis para você fazer muitas coisas interessantes.</p><p style=\"margin-left: 0px;\">Se você tentar rodar este exemplo e ele não mostrar nenhuma mensagem de saída, ou aparecer uma caixa de diálogo pedindo para você salvar o arquivo, ou você ver todo o conteúdo do arquivo como texto, há uma grande chance do seu servidor não ter o PHP habilitado ou não estar configurado corretamente. Peça ao seu administrador para habilitar o PHP para você usando o capítulo de&nbsp;<a href=\"https://www.php.net/manual/pt_BR/install.php\">Instalação</a>&nbsp;do manual. Se você está desenvolvendo localmente, leia também o capítulo de instalação indicado acima para ter certeza de que configurou tudo corretamente. Confirme que está acessando o arquivo via HTTP através do servidor web. Se acessar o arquivo através do sistema de arquivos, então ele não será interpretado pelo PHP. Caso o problema persista, não hesite em nos chamar nos vários&nbsp;<a href=\"https://www.php.net/support.php\">»&nbsp;canais de suporte do PHP</a>.</p><p style=\"margin-left: 0px;\">O objetivo do exemplo é mostrar o formato especial das tags do PHP. Neste exemplo nós usamos&nbsp;<code class=\"literal\">&lt;?php</code>&nbsp;para indicar que a partir daquele ponto entramos no modo PHP. Então nós colocamos a instrução do PHP e saímos do modo PHP adicionando a tag de fechamento,&nbsp;<code class=\"literal\">?&gt;</code>. Você pode entrar e sair do modo PHP num arquivo HTML desta maneira em qualquer lugar que você queira. Para mais detalhes, leia a seção do manual que fala da&nbsp;<a href=\"https://www.php.net/manual/pt_BR/language.basic-syntax.php\">sintaxe básica do PHP</a>.</p><blockquote><p style=\"margin-left: 0px;\">Nota:&nbsp;Uma Nota sobre Fins de linha<br></p><p style=\"margin-left: 0px;\">Fins de linha têm pouco significado no HTML, entretanto ainda é uma boa idéia fazer o seu HTML ter uma boa aparência e organização através da divisão em linhas. Um fim de linha imediatamente após a tag de fechamento&nbsp;<code class=\"literal\">?&gt;</code>&nbsp;será removido pelo PHP. Isso pode ser extremamente útil quando você está juntando vários blocos de PHP ou arquivos incluídos contendo apenas PHP que não deveriam imprimir nada no processo. Ao mesmo tempo isso pode ser um pouco confuso. Você pode colocar um espaço depois da tag de fechamento&nbsp;<code class=\"literal\">?&gt;</code>&nbsp;para forçar a impressão de um espaço e fim de linha ou você pode explicitamente imprimir o fim de linha com um último echo/print de dentro de seu bloco PHP.</p></blockquote><blockquote><p style=\"margin-left: 0px;\">Nota:&nbsp;Uma Nota sobre os Editores de Texto<br></p><p style=\"margin-left: 0px;\">Há muitos editores de textos e Integrated Development Enviroments (IDEs) que você pode usar para criar, editar e gerenciar arquivos PHP. Uma lista parcial destas ferramentas pode ser vista na&nbsp;<a href=\"http://en.wikipedia.org/wiki/List_of_PHP_editors\">»&nbsp;Lista de Editores para PHP</a>. Se você gostaria de recomendar um editor, por favor visite a página acima e peça ao administrador da página para adicionar o editor à lista. Ter um editor que destaca a sintaxe das tags pode ser muito útil.</p></blockquote><blockquote><p style=\"margin-left: 0px;\">Nota:&nbsp;Uma Nota sobre os Processadores de Texto<br></p><p style=\"margin-left: 0px;\">Processadores de texto como o StarOffice Writer, Microsoft Word e Abiword não são boas escolhas para editar arquivos PHP. Se você deseja usar um desses para este script de teste, você precisa verificar se você está salvando o arquivo como&nbsp;texto plano&nbsp;ou o PHP não será capaz de ler e executar o script.</p></blockquote><blockquote><p style=\"margin-left: 0px;\">Nota:&nbsp;Uma Nota sobre o Bloco de Notas do Windows<br></p><p style=\"margin-left: 0px;\">Se você está escrevendo seus scripts PHP usando o Bloco de Notas do Windows, você precisará ter certeza de que seus arquivos estão sendo salvos com a extensão&nbsp;.php. (O Bloco de Notas do Windows adiciona automaticamente a extensão&nbsp;.txt&nbsp;aos arquivos a não ser que você siga um dos passos a seguir para prevenir isto). Quando a caixa de diálogo Salvar estiver aberta e você for digitar o nome do seu arquivo, coloque o nome do arquivo entre aspas (i.e. \"ola.php\"). Uma alternativa é você clicar na lista drop-down \'Documentos de Texto\' na caixa de diálogo \'Salvar\' e alterar a opção para \"Todos os tipos de arquivos\". Você agora pode digitar o nome do seu arquivo sem usar as aspas.</p></blockquote><p style=\"margin-left: 0px;\">Agora que você criou com sucesso um script simples em PHP, é hora de criar o mais famoso dos scripts PHP! Uma chamada à função&nbsp;<a href=\"https://www.php.net/manual/pt_BR/function.phpinfo.php\">phpinfo()</a>&nbsp;e você verá muitas informações úteis sobre seu sistema e configurações como as&nbsp;<a href=\"https://www.php.net/manual/pt_BR/language.variables.predefined.php\">Variáveis Predefinidas</a>&nbsp;disponíveis, módulos carregados pelo PHP, e as opções de&nbsp;<a href=\"https://www.php.net/manual/pt_BR/configuration.php\">configuração</a>. Tire algum tempo para ver e revisar estas informações importantes.</p><p style=\"margin-left: 0px;\">Exemplo #2 Como obter informações sobre o PHP</p><p><code><span style=\"color: rgb(0, 0, 0);\"><span style=\"color: rgb(0, 0, 187);\">&lt;?php&nbsp;phpinfo</span><span style=\"color: rgb(0, 119, 0);\">();&nbsp;</span><span style=\"color: rgb(0, 0, 187);\">?&gt;</span></span></code></p>',1,'2021-12-24'),(6,'MariaDB vs MySQL, um Resumos de Tecnologias de Base de Dados','<p style=\"margin-left: 0px;\">Em um&nbsp;<a href=\"https://kinsta.com/pt/blog/nginx-vs-apache/\">artigo anterior</a>, apresentamos a história do servidor web Apache, seu papel na ascensão da internet, e como sua participação no mercado está sendo consumida por concorrentes como o Nginx. Apache é parte da&nbsp;<a href=\"https://en.wikipedia.org/wiki/LAMP_(software_bundle)\" target=\"_blank\">pilha LAMP</a>&nbsp;-Linux + Apache + MySQL + PHP – e não é um eufemismo dizer que mais da metade de toda a internet deve sua existência à LAMP.</p><p><img src=\"https://kinsta.com/pt/wp-content/themes/kinsta/images/components/sidebar-cta/illustration-speed.svg\" alt=\"\" width=\"147\" height=\"143\"></p><p style=\"margin-left: 0px;\">Discover how Kinsta customers are seeing up to a 200% increase in performance.</p><p><a href=\"https://kinsta.com/pt/caracteristicas/\">Saiba mais</a></p><p style=\"margin-left: 0px;\">Hoje vamos dar uma olhada em algumas das diferenças entre o MariaDB e o MySQL, duas tecnologias de banco de dados similares, mas diferentes, usadas para alimentar milhões de sites ao redor do globo.</p><h3 style=\"margin-left: 0px;\">Tabela de Conteúdos</h3><ol><li><a href=\"https://kinsta.com/pt/blog/mariadb-vs-mysql/#mysql\">O que é o MySQL</a></li><li><a href=\"https://kinsta.com/pt/blog/mariadb-vs-mysql/#mariadb\">O que é MariaDB</a></li><li><a href=\"https://kinsta.com/pt/blog/mariadb-vs-mysql/#compatibility\">MariaDB vs MySQL: Compatibilidade</a></li><li><a href=\"https://kinsta.com/pt/blog/mariadb-vs-mysql/#forking\">MariaDB vs MySQL: As razões por trás da Forking</a></li><li><a href=\"https://kinsta.com/pt/blog/mariadb-vs-mysql/#differences\">MariaDB vs MySQL: Diferenças chave</a></li></ol><h2 style=\"margin-left: 0px;\">MariaDB vs Diferenças MySQL</h2><p style=\"margin-left: 0px;\">Apesar de MariaDB ser um garfo do MySQL, estes dois sistemas de gerenciamento de banco de dados ainda são bastante diferentes:</p><ul><li>MariaDB é totalmente licenciada com GPL, enquanto o MySQL tem uma abordagem de dupla licença.</li><li>Cada lida com pools de thread de uma maneira diferente.</li><li>MariaDB suporta muitos mecanismos de armazenamento diferentes.</li><li>Em muitos cenários, o MariaDB oferece melhor desempenho.</li></ul><p>Support</p><h2>O que é o MySQL</h2><p style=\"margin-left: 0px;\">MySQL é um banco de dados relacional (RDBMS) que viu a luz do dia pela primeira vez em 1995,&nbsp;<a href=\"https://web.archive.org/web/20090313160628/http://www.opensourcereleasefeed.com/interview/show/five-questions-with-michael-widenius-founder-and-original-developer-of-mysql\" target=\"_blank\">criado</a>&nbsp;por&nbsp;<a href=\"https://twitter.com/montywi\" target=\"_blank\">Michael Monty Widenius</a>&nbsp;e&nbsp;<a href=\"https://en.wikipedia.org/wiki/David_Axmark\" target=\"_blank\">David Axmark</a>. Foi criada quando o mercado era dominado pela Microsoft e pelas soluções proprietárias (e caras) da Oracle.</p><p><img src=\"https://kinsta.com/pt/wp-content/uploads/sites/3/2019/07/pagina-antiga-mysql.jpg\" alt=\"Página antiga do MySQL de 1998 \" width=\"1488\" height=\"1299\">Página antiga do MySQL de 1998 (Fonte da imagem:&nbsp;<a href=\"https://web.archive.org/web/19980701000000*/https://www.mysql.com/\" target=\"_blank\">Archive.org</a>)</p><p style=\"margin-left: 0px;\">O&nbsp;<a href=\"https://kinsta.com/pt/base-de-conhecimento/o-que-e-mysql/\">MySQL</a>&nbsp;é hoje em dia uma marca arquetípica. O seu papel foi fundamental na construção da internet tal como a conhecemos hoje.&nbsp;<a href=\"https://www.linuxjournal.com/article/9224\" target=\"_blank\">Este artigo</a>&nbsp;no Linux Journal lança alguma luz sobre os seus primeiros dias.</p><p style=\"margin-left: 0px;\">Com a sua adopção antecipada do licenciamento duplo — e usando a GNU GPL para a sua versão livre — o MySQL abriu caminho para muitos outros vendedores de software que vieram mais tarde.</p><p style=\"margin-left: 0px;\"><a href=\"http://www.h-online.com/open/features/Open-core-or-dual-licensing-The-example-of-MySQL-1367824.html\" target=\"_blank\">Nas palavras de Michael Widenius</a>&nbsp;sobre licenciamento duplo:</p><blockquote><p style=\"margin-left: 0px;\">…uma vez que o MySQL é um produto de infra-estrutura que é facilmente incorporado noutros produtos, poderíamos vender licenças àqueles que queriam incorporar o MySQL no seu produto mas não queriam tornar o seu produto open source.</p></blockquote><p style=\"margin-left: 0px;\">Os aplicativos da Web implantados no servidor, como parte da pilha LAMP, geralmente não incorporam o MySQL e distribuem seu código. Isso significava que qualquer um poderia usar livremente o software para seus próprios produtos web.</p><p style=\"margin-left: 0px;\">Menos de uma década após o seu lançamento público, o&nbsp;<a href=\"https://www.theregister.co.uk/2005/10/18/mysql_marketshare_numbers/\" target=\"_blank\">MySQL estava a dominar</a>&nbsp;o mercado das bases de dados relacionais de código aberto.</p><p style=\"margin-left: 0px;\">O Google Trends mostra que o interesse global de pesquisa na web no MySQL atingiu o seu auge entre 2004 – 2005:</p><p><img src=\"https://kinsta.com/pt/wp-content/uploads/sites/3/2019/07/interesse-mysql-longo-tempo.png\" alt=\"Interesse no MySQL ao longo do tempo\" width=\"1705\" height=\"586\">Interesse no MySQL ao longo do tempo</p><p style=\"margin-left: 0px;\">Algumas das empresas notáveis que usam o MySQL incluem:</p><ul><li><a href=\"https://gigaom.com/2011/12/06/facebook-shares-some-secrets-on-making-mysql-scale/\" target=\"_blank\">Facebook</a>, uma reportagem de 2011 menciona tanto quanto “60 milhões de consultas por segundo, e quase 4 milhões de mudanças de linha por segundo” e a manipulação do MySQL “praticamente toda interação do usuário: gostos, compartilhamentos, atualizações de status, alertas, solicitações”.</li><li>A&nbsp;<a href=\"https://medium.com/netflix-techblog/netflix-billing-migration-to-aws-451fba085a4\" target=\"_blank\">parte de facturação</a>&nbsp;da Netflix na sua plataforma</li><li><a href=\"http://highscalability.com/blog/2012/3/26/7-years-of-youtube-scalability-lessons-in-30-minutes.html\" target=\"_blank\">Youtube</a></li><li><a href=\"https://www.youtube.com/watch?v=iNxqZSbaHYQ&amp;feature=youtu.be\" target=\"_blank\">Booking.com</a></li><li><a href=\"https://medium.com/airbnb-engineering/how-we-partitioned-airbnb-s-main-database-in-two-weeks-55f7e006ff21\" target=\"_blank\">Airbnb</a></li><li>e muitos outros.</li></ul><p style=\"margin-left: 0px;\">Mais um fator que contribuiu para a ascensão e adoção do MySQL que vale a pena mencionar é o&nbsp;<a href=\"https://kinsta.com/pt/ajuda/phpmyadmin-wordpress/\">phpMyAdmin</a>.</p><p style=\"margin-left: 0px;\">PhpMyAdmin é uma ferramenta de administração de banco de dados baseado na web que remonta a 1998, o que fez seu caminho bastante cedo para os consoles de gerenciamento de provedores de hospedagem compartilhada, incluindo&nbsp;<a href=\"https://kinsta.com/pt/base-de-conhecimento/o-que-e-cpanel/\">cPanel</a>. É uma ferramenta&nbsp;<a href=\"https://kinsta.com/pt/base-de-conhecimento/o-que-php/\">escrita em PHP</a>&nbsp;que facilitou a administração do MySQL em servidores LAMP. Importar, exportar, compor consultas complexas, apagar e criar tabelas, realizar pesquisas complexas são apenas algumas das coisas que o phpMyAdmin tornou possíveis sem que os utilizadores tivessem de usar o terminal Linux.</p><h3>WordPress e MySQL</h3><p style=\"margin-left: 0px;\">Um dos factores por detrás da popularidade do MySQL é, sem dúvida, o WordPress, que hoje alimenta cerca de 60% dos sistemas CMS ou&nbsp;<a href=\"https://kinsta.com/pt/wordpress-quota-mercado/\">34% de toda a web</a>.<br>O WordPress foi&nbsp;<a href=\"https://kinsta.com/pt/aprenda/historia-wordpress/#history-of-wordpress\">criado em 2003</a>&nbsp;por Matt Mullenweg e Mike Little, como um garfo de outro projecto. Foi escrito em PHP, usava o&nbsp;<a href=\"https://kinsta.com/pt/base-de-conhecimento/banco-de-dados-wordpress/\">MySQL como base de dados</a>&nbsp;e, quando apareceu, a sua adopção foi apanhada como um incêndio.</p><p style=\"margin-left: 0px;\">O WordPress rapidamente se tornou sinônimo do conceito de software de código aberto, assim como sua pilha de servidores subjacentes. DisplayWP tem um&nbsp;<a href=\"http://displaywp.com/wordpress-minimum-mysql-version/\" target=\"_blank\">bom gráfico</a>&nbsp;da versão mínima necessária do MySQL para cada versão do WordPress.</p><p style=\"margin-left: 0px;\">Um dos fatores que impulsionou a adoção do MySQL foi o lado GPL de seu licenciamento. Como ele é compatível com o Linux, ele começou a ser incluído por padrão nas distribuições Linux. Hoje ele vem incluído por padrão no Ubuntu.</p><h3>Breve visão geral do MySQL e do modelo de banco de dados relacional</h3><p style=\"margin-left: 0px;\">O MySQL foi concebido como um RDBMS (Relational Database Management System). O modelo de Banco de Dados Relacional&nbsp;<a href=\"https://en.wikipedia.org/wiki/Edgar_F._Codd\" target=\"_blank\">remonta à década de 1970</a>, conforme descrito pelos “<a href=\"https://en.wikipedia.org/wiki/Codd%27s_12_rules\" target=\"_blank\">Doze Mandamentos do Codd</a>“. Em poucas palavras, este modelo estrutura os dados em tabelas que consistem em colunas e linhas. Cada linha é identificada exclusivamente por uma chave (Primary Key para usar jargão SQL).</p><p style=\"margin-left: 0px;\">Essas Chaves Primárias podem ser usadas como pinos de um tipo que são usados por outras tabelas para definir uma relação com a linha específica. Assim, a coluna FOREIGN KEY em uma tabela de banco de dados relacional se referirá a uma coluna PRIMARY KEY em outra tabela, definindo uma relação entre linhas em diferentes tabelas.</p><p style=\"margin-left: 0px;\">Como o&nbsp;<a href=\"https://www.essentialsql.com/what-is-the-difference-between-a-primary-key-and-a-foreign-key/\" target=\"_blank\">Essential SQL explica</a>, “A&nbsp;chave primária&nbsp;consiste em uma ou mais colunas cujos dados contidos dentro dela são usados para&nbsp;identificar exclusivamente&nbsp;cada linha da tabela. Os dados nas colunas-chave primárias devem ser únicos e não podem ser vazios ou NULL. Em um banco de dados relacional “a tabela tem apenas uma chave primária e sua definição é obrigatória”.<br>Ao mesmo tempo, “chave estrangeira&nbsp;é um conjunto de uma ou mais colunas em uma tabela que se refere à chave primária em outra tabela. Não há qualquer código especial, configurações ou definições de tabela que você precisa colocar para “designar” oficialmente uma chave estrangeira.</p><p><img src=\"https://kinsta.com/pt/wp-content/uploads/sites/3/2019/07/modelo-banco-dados-relacional-mysql.png\" alt=\"Modelo de banco de dados relacional no MySQL\" width=\"1458\" height=\"972\">Modelo de banco de dados relacional no MySQL</p><p style=\"margin-left: 0px;\">Desta forma, com as bases de dados relacionais, é possível modelar os dados de forma sofisticada e definir conexões entre vários dados. No nosso simples exemplo acima, temos duas tabelas, com linhas que podem ser relacionadas entre si, por exemplo, cada pessoa possui um carro.</p><p style=\"margin-left: 0px;\">Podemos consultar estes dados de acordo com a lógica que precisamos, podemos filtrar o conjunto de resultados de acordo com diferentes conjuntos de critérios, e podemos construir nossa consulta de uma forma muito mais complexa do que a descrita acima.</p><p style=\"margin-left: 0px;\">Por esta razão, as bases de dados relacionais – e as bases de dados em geral – utilizam linguagens específicas de domínio entre as quais a SQL, que significa&nbsp;<a href=\"https://en.wikipedia.org/wiki/SQL\" target=\"_blank\">Structured Query Language</a>, é a prevalente, se não a única utilizada pela RDBMS.</p><h3>Aquisição pela Sun</h3><p style=\"margin-left: 0px;\">Em 2008, a MySQL AB, a empresa por trás do MySQL, foi adquirida pela Sun Microsystems. Esta empresa criou a JAVA, Solaris Unix OS e contribuiu significativamente para diferentes tecnologias informáticas. Como a Business Wire&nbsp;<a href=\"https://www.businesswire.com/news/home/20080116005349/en/Sun-Microsystems-Announces-Agreement-Acquire-MySQL-Developer\" target=\"_blank\">reportou na altura</a>:</p><blockquote><p style=\"margin-left: 0px;\">“Sun Microsystems, Inc. (NASDAQ:JAVA) anunciou hoje que entrou num acordo definitivo para adquirir a MySQL AB, um ícone open source e desenvolvedor de uma das bases de dados open source de crescimento mais rápido do mundo por aproximadamente $1 bilhão em consideração total”.</p></blockquote><p style=\"margin-left: 0px;\">Em breve provará que esta aquisição não foi suficiente para evitar a queda da Sun, mas pinta um quadro de como o MySQL era grande naqueles dias.</p><h3>Oracle</h3><p style=\"margin-left: 0px;\">A Oracle Corporation é fornecedora do maior banco de dados de código fechado até hoje, o banco de dados Oracle.</p><p style=\"margin-left: 0px;\">Era uma concorrente directa do MySQL e virtualmente a antítese da GPL, modelo de software livre e de código aberto que o MySQL estava a tornar-se nessa altura.</p><p style=\"margin-left: 0px;\">Quando a Oracle comprou a Sun, e a MySQL com ela em 2010 (<a href=\"https://www.quora.com/Why-did-Oracle-buy-MySQL-if-they-dont-even-make-money-out-of-it/answer/David-Tydeman-2?ch=10&amp;share=9c0f838a&amp;srid=hGRF\" target=\"_blank\">ganhando contra a IBM por isso</a>), o mundo&nbsp;<a href=\"https://www.gnu.org/philosophy/floss-and-foss.en.html\" target=\"_blank\">FOSS</a>&nbsp;viu isso como algo tão “sinistro” como um ataque Borg em Star Trek. Um utilizador lembra-se do evento&nbsp;<a href=\"https://www.quora.com/Why-did-Oracle-buy-MySQL-if-they-dont-even-make-money-out-of-it\" target=\"_blank\">em Quora</a>:</p><blockquote><p style=\"margin-left: 0px;\">O MySQL era uma grave ameaça para a Oracle – na altura a base de dados da Oracle representava algo a norte de 80% de todas as receitas (e dada a tripulação esqueleto necessária para a manter, ainda mais dos lucros).<br></p><p style=\"margin-left: 0px;\">A MySQL estava a fazer incursões sérias – grandes empresas da Fortune 50 com licenças de sítios que custaram milhões estavam a transferir bases de dados (especialmente as de leitura apenas) da Oracle para a MySQL porque as despesas administrativas eram muito mais baixas. Eu sei, eu ajudei a fazer algumas destas coisas.<br></p><p style=\"margin-left: 0px;\">Muitos na comunidade MySQL queriam adicionar funcionalidades que tornariam o uso de uma versão gratuita da Oracle obsoleta. O MySQL estava definitivamente a seguir esse caminho. As ferramentas estavam a amadurecer e o Larry estava com medo.</p><p style=\"margin-left: 0px;\">Então a Oracle comprou o MySQL para ter a certeza que teria um controlo sobre a marca, dispersar a comunidade e salvar a sua bandeira das massas não lavadas.</p><p style=\"margin-left: 0px;\">Esta foi uma conclusão lógica, porque o MySQL, nessa altura, tornou-se tão popular que pode ter sido visto como uma ameaça real ao core business da Oracle. Como&nbsp;<a href=\"https://geekflare.com/mysql-to-mariadb-migration/\" target=\"_blank\">disse</a>&nbsp;Ankush Thakur da Geekflare, o MySQL tornou-se tão popular que, muito em breve, os programadores esqueceram que SQL e MySQL eram duas coisas diferentes.</p></blockquote><p style=\"margin-left: 0px;\">Antes mesmo da aquisição acontecer, no final de 2009, Monty Widenius, que&nbsp;<a href=\"http://monty-says.blogspot.com/2009/02/time-to-move-on.html\" target=\"_blank\">deixou a equipa MySQL nesse ano</a>&nbsp;para estabelecer a sua própria empresa de garfos e bases de dados, publicou um apelo dramático&nbsp;<a href=\"http://monty-says.blogspot.com/2009/12/help-saving-mysql.html\" target=\"_blank\">no seu blog</a>&nbsp;(vamos citar apenas o início):</p><blockquote><p style=\"margin-left: 0px;\">Ajuda para salvar o MySQL</p><p style=\"margin-left: 0px;\">Eu, Michael “Monty” Widenius, o criador do MySQL, estou a pedir-lhe urgentemente para ajudar a salvar o MySQL das garras da Oracle. Sem a sua ajuda imediata, a Oracle poderá ficar com o MySQL a qualquer momento. Ao escrever à Comissão Europeia (CE) pode apoiar esta causa e ajudar a garantir o futuro desenvolvimento do produto MySQL como um projecto Open Source.</p></blockquote><p style=\"margin-left: 0px;\">A aquisição, no entanto, passou por um mês depois, para consternação de muitos na comunidade open source. A Widenius&nbsp;<a href=\"http://monty-says.blogspot.com/2009/02/time-to-move-on.html\" target=\"_blank\">já tinha deixado a Sun</a>, formado a Monty Program AB, e forjado o MySQL, lançando as bases para MariaDB. Enquanto levava com ele muitos programadores MySQL.</p><p style=\"margin-left: 0px;\">Até hoje, as pessoas continuam a questionar a legitimidade dos receios de Monty. Especialmente, uma vez que o pior cenário não aconteceu de todo: A Oracle não adquiriu o MySQL apenas para o matar.</p><p style=\"margin-left: 0px;\">Alguns argumentam&nbsp;<a href=\"https://www.quora.com/Why-did-Oracle-buy-MySQL-if-they-dont-even-make-money-out-of-it/answer/David-Tydeman-2?ch=10&amp;share=9c0f838a&amp;srid=hGRF\" target=\"_blank\">que o MySQL foi comprado pela Oracle como nada mais do que uma “vítima colateral”</a>&nbsp;da aquisição da Sun. Em 2009, aqueles que tinham os olhos no mercado de bases de dados tinham razões para se preocuparem.</p><p style=\"margin-left: 0px;\">Os avisos estavam lá. O desenvolvedor do principal motor de armazenamento da MySQL, InnoDB, uma companhia da Finlândia, foi adquirido pela Oracle em 2005. Mais tarde, foram totalmente fundidos na Oracle, terminando a empresa original. Em 2006, a Oracle comprou os criadores de&nbsp;<a href=\"https://en.wikipedia.org/wiki/Berkeley_DB\" target=\"_blank\">Berkeley DB</a>, fornecedor de outro motor de armazenamento BDB menos importante. Eles estavam circulando ao redor.</p><h2>O que é MariaDB</h2><p style=\"margin-left: 0px;\"><a href=\"https://mariadb.com/kb/en/library/mariadb-5138-release-notes/\" target=\"_blank\">MariaDB teve seu primeiro lançamento</a>&nbsp;em outubro de 2009, com a versão 5.1.38 Beta, baseada no MySQL 5.1.38. Era um fork destinado a&nbsp;<a href=\"https://www.computerworld.com.au/article/457551/dead_database_walking_mysql_creator_why_future_belongs_mariadb/\" target=\"_blank\">“assegurar que a base de código MySQL seria livre para sempre”</a>.</p><p style=\"margin-left: 0px;\">Na altura do forking, o medo mais comum era que a aquisição fosse uma aquisição hostil com o objectivo de matar o MySQL. Esta preocupação, pelo menos em parte, revelou-se infundada.</p><p style=\"margin-left: 0px;\"></p><h3 style=\"margin-left: 0px;\">Quer saber como aumentamos nosso tráfego em mais de 1000%?</h3><p>Junte-se a mais de 20.000 outros que recebem nossa newsletter semanal com dicas privilegiadas do WordPress!</p><p><a href=\"https://kinsta.com/pt/blog/mariadb-vs-mysql/#newsletter\">Inscreva-se agora</a></p><p style=\"margin-left: 0px;\">Novamente em 2009, a Monty Program AB e a Percona, uma companhia que fornece serviços MySQL premium,&nbsp;<a href=\"https://www.infoq.com/news/2009/05/mysql-open-database-alliance/\" target=\"_blank\">estabeleceram a Open Database Alliance</a>. O seu objectivo era “unificar todo o desenvolvimento e serviços relacionados com o MySQL, fornecendo uma solução para a fragmentação e incerteza que as comunidades, negócios e especialistas técnicos envolvidos com o MySQL enfrentam.</p><p style=\"margin-left: 0px;\"><a href=\"https://www.percona.com/about-us/pressreleases/mysql-founder-monty-widenius-and-percona-ceo-peter-zaitsev-launch-the-open-database-alliance\" target=\"_blank\">A ideia</a>&nbsp;era “tornar-se o centro da indústria para a base de dados de código aberto MySQL, incluindo MySQL e código derivado, binários, formação, suporte e outras melhorias para a comunidade MySQL e o ecossistema de parceiros”.</p><p style=\"margin-left: 0px;\">Olhando para trás: é possível que esses passos tenham impedido um cenário pior para o famoso banco de dados.</p>',2,'2021-12-24');

__insert;

    $smtm = $this->PDO ->prepare($sql);
    if($smtm -> execute()){
        return true;
    }else{
        return false;
    }
    }
}
